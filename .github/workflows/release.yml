name: Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifactName: "^europa.*ubuntu$"
            targetName: "europa"
            appPostFix: ".AppImage"

          - os: windows-latest
            artifactName: "^europa.*win\\.exe$"
            targetName: "europa.exe"
            appPostFix: ".exe"

          # - os: macos-latest
          #   artifactName: "^europa.*darwin$"
          #   targetName: "europa"
          #   appPostFix: ".dmg"

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - run: yarn

      - name: Prepare for app notarization (macOS)
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      - name: Download Release Asset
        id: download_release_asset
        uses: i3h/download-release-asset@v1
        with:
          owner: atenjin
          repo: europa
          tag: v0.3.20
          file: ${{ matrix.artifactName }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: rename & mv artifact
        run: yarn run rename

      - name: Build Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # macOS code signing certificate
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}

      - name: Upload applications to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/Europa-UI-${{ github.ref }}${{ matrix.appPostFix }}
          asset_name: Europa-${{ github.ref }}${{ matrix.appPostFix }}
          tag: ${{ github.ref }}
          body: "release"
          prerelease: true